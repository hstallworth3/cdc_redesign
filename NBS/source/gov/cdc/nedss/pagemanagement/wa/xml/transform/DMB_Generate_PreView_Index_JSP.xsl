<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >
<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>

    <xsl:template match="Header">  <!-- Put PageManager comment at top of output -->
    <xsl:text disable-output-escaping="yes"><![CDATA[ 
    <%
    response.setHeader("Cache-Control","no-cache"); //HTTP 1.1
    response.setHeader("Pragma","no-cache"); //HTTP 1.0
    response.setDateHeader ("Expires", 0); //prevents caching at the proxy server
    %>
    <%@ include file="/jsp/tags.jsp" %>
    <%@ page isELIgnored ="false" %>
    <!-- View JSP file generated by the PageManager - Page Template Version ]]></xsl:text><xsl:value-of select="VersionID"/> <xsl:text> Created: </xsl:text>  <xsl:value-of select="CreateTime" /><xsl:text disable-output-escaping="yes"><![CDATA[--> ]]></xsl:text>
    </xsl:template>
    
    <xsl:template match="Page" xml:space="preserve">
       <xsl:comment> ### DMB: BEGIN PREVIEW INDEX JSP PAGE GENERATE ###--</xsl:comment>
    <html>
    <head>
     <xsl:text disable-output-escaping="yes"><![CDATA[<%@ include file="/jsp/tags.jsp" %>]]></xsl:text>
    <title>NBS:<xsl:value-of select="PageName"/></title>
    <xsl:text disable-output-escaping="yes"><![CDATA[<%@ include file="/jsp/resources.jsp" %>]]></xsl:text>   
     <xsl:text disable-output-escaping="yes"><![CDATA[<%@ page import="java.util.*" %>]]></xsl:text>
     <xsl:text disable-output-escaping="yes"><![CDATA[<SCRIPT Language="JavaScript" Src="/nbs/dwr/interface/JPageForm.js"></SCRIPT>]]></xsl:text>
        <script language="JavaScript"> 
        <xsl:text disable-output-escaping="yes"><![CDATA[  
        
      
       
       function closePrintFriendlyWindow()
      {
          self.close();

          var opener = getDialogArgument(); 
          var pview = opener.document.getElementById("pageview")
          pview.style.display = "none";
          
          return false;   
      }

	 function handleInputElts() {
                  // disable links
              	$j("a[href]:not([href^=#])").removeAttr('href');
              	
              	// remove i/p elts.
              	$j(":input").remove();	
        }

         
      function deleteForm() {
            document.forms[0].target="";     
            var confirmMsg="You have indicated that you would like to delete this Investigation. By doing so, this record will no longer be available in the system, and all Contact Records and Interview Records that were created within this investigation will be deleted. Would you like to continue with this action?";
            if (confirm(confirmMsg)) {
                document.forms[0].action ="${PageForm.attributeMap.deleteButtonHref}";
            } else {
                return false;
            }               
      }
      /** Popup a child window and load the page that is currently being 
       *   viewed on the parent window. The call to load the page includes an additional 
       *   parameter called 'mode' that has a value of print. This value is used to load
       *   a seperate css file named 'print.css' when the page loads in the child window.
       */
       
        
       function showPrintFriendlyPage() {
       
           var divElt =getElementByIdOrByName("pageview");
           divElt.style.display = "block";
           var o = new Object();
           o.opener = self;   
           var URL = "/nbs/PreviewPage.do?method=viewPageLoad&mode=print";
           var dialogFeatures = "dialogWidth:780px;dialogHeight:500px;status:no;unadorned:yes;scroll:yes;scrollbars:yes;help:no;resizable:yes;max:1;min:1";
           
		   var modWin = openWindow(URL, o,dialogFeatures, divElt, "");
		   
           return false;
        }
            
        function editForm() {                    
            var notificationCheck =getElementByIdOrByName("NotificationExists");
            if(notificationCheck !=null && notificationCheck.value=='true'){
            var confirmMsg="A notification message request exists against this event. If you continue with this action, you may change the content of the message. Select OK to continue or Cancel to not continue.";
            if (confirm(confirmMsg)) {
                document.forms[0].target="";
                document.forms[0].action ="${PageForm.attributeMap.Edit}";    
            } else {
                return false;
            }                   
            } else {
                document.forms[0].target="";
                document.forms[0].action ="${PageForm.attributeMap.Edit}";                   
            }
        }
        
        function manageAssociations(){
        var notificationCheck =getElementByIdOrByName("NotificationExists");
        if(notificationCheck !=null && notificationCheck.value=='true'){
            var confirmMsg="A notification message request exists against this event. If you continue with this action, you may change the content of the message. Select OK to continue or Cancel to not continue.";
            if (confirm(confirmMsg)) {
              document.forms[0].target="";
              document.forms[0].action ="${PageForm.attributeMap.ManageEvents}";
            } else {
                return false;
            }                   
        } else {
              document.forms[0].target="";
              document.forms[0].action ="${PageForm.attributeMap.ManageEvents}";
        }
          
            }
    
     function appendPatientSearch(patientRevision,caseLocalId,perMprUid )
        {
             
            $j("table#contactNamedByPatListID").append("<tr> <td colspan=\"6\" style=\"text-align:right;\"> <input type=\"Button\" name=\"submitct\" value=\"Add New Contact Record\"  onclick=\"SearchPatientPopUp('" + patientRevision + "','" + caseLocalId + "','" + perMprUid + "');\"/> </td> </tr>");
                    
        }   
      function appendManageAssociation(patientRevision,caseLocalId,perMprUid )
         {
            
                
                    $j("table#patNamedByContactsListID").append("<tr> <td colspan=\"6\" style=\"text-align:right;\"> <input type=\"Button\" name=\"submitmanage\" value=\"Manage Contact Associations\"  onclick=\"ManageCtAssociationtPopUp('" + patientRevision + "','" + caseLocalId + "','" + perMprUid+ "');\"/> </td> </tr>");
        }  
        
    
        function reloadInvs(filler){
                
              JPageForm.callChildForm(filler.value, function(data) {       
                 });                
                 setTimeout("reldPage()", 1000);
          }

    	//for contact std preview not to get error..
	function conStdGetProcessingDecisionOptions() {
		return;
	}
	
	   function rollingNoteSetUserDate(elementId) {
		             <%
		             String theUserName = "";
		               try {
		                   NBSSecurityObj so = (NBSSecurityObj) request.getSession().getAttribute("NBSSecurityObject");
		                   if (so != null) {
		                         theUserName = so.getTheUserProfile().getTheUser().getFirstName() + " " + so.getTheUserProfile().getTheUser().getLastName();
		                   }   
		               }
		               catch (Exception e) {
		               }           
		            %>
		          	var currentUser = "<%=theUserName%>";
		          	dwr.util.setValue(elementId+"User",currentUser);
		    
		    
		    	var todayDT = new Date();
		    	thedd = todayDT.getDate().toString();
		    	if (parseInt(thedd) < 10) thedd = "0" + thedd;
		    	themm = todayDT.getMonth()+1;//January is 0!
		    	if (parseInt(themm) < 10) themm = "0" + themm;
		    	theyyyy = todayDT.getFullYear();
		    	var theDate = themm + "/" + thedd + "/" + theyyyy;
		    	var theMinutes = todayDT.getMinutes();
		    	if (theMinutes < 10){
				theMinutes = "0" + theMinutes;
			}
		    	var theTime = " "+ todayDT.getHours() + ":" + theMinutes;
		    	dwr.util.setValue(elementId+"Date",theDate+theTime);
      }
	

     ]]> </xsl:text>  
     <xsl:comment> =========Begin Javascript Functions for Dynamic Rules==========</xsl:comment>
      <xsl:for-each select="AddedJavaScriptFunction">
        <xsl:value-of select="." disable-output-escaping="yes"/>
      </xsl:for-each>

       function pgCheckDynamicRulesOnLoad() {
       	    var JCTContactForm = JBaseForm;
           <xsl:if test="OnLoadFunctions">
           	<xsl:value-of select="OnLoadFunctions" disable-output-escaping="yes"/>
          </xsl:if>
       return;
      }     
      
      	<xsl:comment> === batch subsection add edit check functions (if any) follow ===</xsl:comment>
           	<xsl:for-each select="OnBatchAddFunction"><xsl:text disable-output-escaping="yes">function pg</xsl:text><xsl:value-of select="BatchSubsectionIdentifier"/><xsl:text disable-output-escaping="yes">BatchAddFunction()</xsl:text>
           	   <xsl:text disable-output-escaping="yes"><![CDATA[ { 
          			var errorLabels = new Array();
          			var retVal;
          			var retRule;
          			]]> </xsl:text>
           	        <xsl:for-each select="FunctionToCall">
           	   		<xsl:text disable-output-escaping="yes"><![CDATA[retRule=]]></xsl:text><xsl:value-of select="FunctionName"/><xsl:text disable-output-escaping="yes"><![CDATA[; ]]></xsl:text>
           	   		<xsl:text disable-output-escaping="yes"><![CDATA[if (retRule != null && retRule.labels != undefined) { errorLabels = errorLabels.concat(retRule.labels); } ]]></xsl:text>
              	</xsl:for-each>
              	
              	<xsl:text disable-output-escaping="yes"><![CDATA[retVal=pgCheckForErrorsOnBatchSubsection(']]></xsl:text><xsl:value-of select="BatchSubsectionIdentifier"/><xsl:text disable-output-escaping="yes"><![CDATA[');]]></xsl:text>
               	<xsl:text disable-output-escaping="yes"><![CDATA[if (retVal != null && retVal != undefined) { errorLabels = errorLabels.concat(retVal); } ]]></xsl:text>
      
              
              	<xsl:text disable-output-escaping="yes"><![CDATA[if (errorLabels.length > 0) {]]></xsl:text>
              	<xsl:text disable-output-escaping="yes"><![CDATA[displayErrors(']]></xsl:text><xsl:value-of select="BatchSubsectionIdentifier"/><xsl:text disable-output-escaping="yes"><![CDATA[errorMessages', errorLabels); return false;}]]></xsl:text>
      		<xsl:text disable-output-escaping="yes"><![CDATA[$j('#]]></xsl:text><xsl:value-of select="BatchSubsectionIdentifier"/><xsl:text disable-output-escaping="yes"><![CDATA[errorMessages').css("display", "none");]]></xsl:text>
      		<xsl:text disable-output-escaping="yes"><![CDATA[return true;]]></xsl:text>
      		<xsl:text disable-output-escaping="yes"><![CDATA[}]]></xsl:text>
              </xsl:for-each>
      
      
     
     </script>
      
               <xsl:text disable-output-escaping="yes"><![CDATA[ 
                  <% 
                   Map map = new HashMap();
                   if(request.getAttribute("SubSecStructureMap") != null){
                   
                 // String watemplateUid="1000879";
                 // map = util.getBatchMap(new Long(watemplateUid));
                     map =(Map)request.getAttribute("SubSecStructureMap");
                 }%>
               ]]> </xsl:text>
          
                 <script language="JavaScript"> 
                   <xsl:text disable-output-escaping="yes"><![CDATA[      
               
                  var answerCache = { };
           		var viewed = -1,count=0;  
           		
    function startTimer() {
	var sessionTimeout = <%= request.getSession().getMaxInactiveInterval()%>
	min = sessionTimeout / 60;
	sec = 0;
	getTimerCountDown();
    }
                   
    function populateBatchRecords()
    {
       dwr.engine.beginBatch();
       var map,ans;          
       JPageForm.getBatchEntryMap(function(map) {
          for (var key in map) {
            count++;
            fillTable(key,"pattern"+key ,"questionbody"+key );
          } 		 
        }); 	
        dwr.engine.endBatch();
    }		  
  
    function writeQuestion( subSecNm,pattern,questionbody) {	
	    var t =getElementByIdOrByName(subSecNm); 	
            var len=0;
	    //t.style.display = "block";
	    <%  String[][]  batchrecinsert  =new String[20][7];  
	  if(map != null){ 
		    Iterator itLab1 = map.entrySet().iterator(); 
		    while(itLab1.hasNext()){  
			Map.Entry pair = (Map.Entry)itLab1.next();%>
							     
	     if(subSecNm == "<%=pair.getKey().toString()%>"){
		<% batchrecinsert  =  (String[][])pair.getValue();  
		 for(int i=0;i<batchrecinsert.length;i++){   
			String checknull1 = batchrecinsert[i][0]; 
			if(checknull1 != null && checknull1 != ""){%>
		var key =   "<%=batchrecinsert[i][0]%>";
		if(key != null && key != 'undefined' && key != ''){
			len =  len +1; 
		}
		<%} }%>
	    }
	<%} }%>
		for (var i = 0; i <len+1; i++){
		   $j($j(t).find("tbody > tr:odd").get(i)).css("background-color","#DCE7F7");
		   $j($j(t).find("tbody > tr:even").get(i)).css("background-color","#DCE7F7");
		}
		var map = {};	var emptyrow="yes";
		//var batchrecord;  
		var code = "1013";
		dwr.engine.beginBatch(); 
		<% batchrecinsert  =new String[20][7];  
		if(map != null){ 
			Iterator itSSMap = map.entrySet().iterator();
			while(itSSMap.hasNext()){ 
				Map.Entry pair = (Map.Entry)itSSMap.next();%>
				if(subSecNm == "<%=pair.getKey().toString()%>"){
					<% batchrecinsert  =  (String[][])pair.getValue();%>   
					//batchrecord = "<%=batchrecinsert%>";
					<% for(int i=0;i<batchrecinsert.length;i++){
				            String checkifnull  = batchrecinsert[i][0];					
					    if(checkifnull  != null && checkifnull  != "null" && checkifnull  != ""){ %>
						var qId= "<%=batchrecinsert[i][0]%>";
						var componentId = "<%=batchrecinsert[i][5]%>";
						if(qId != null && qId != "null" && qId != ' '){
							if(document.getElementById(qId) != null){
								map[qId] = getRepeatingBlockUtilDispText(qId, componentId);
								emptyrow = repeatingBlockCheckForEmptyRow(qId, emptyrow);
							}
			 			}
			<%} }%>
				} 
			<%} }%>
			var batchentry = { subsecNm:subSecNm, id:viewed,answerMap:map};  
			 if(emptyrow=="yes"){
					var errorrow= subSecNm+"errorMessages";
					displayErrors(errorrow, " At least one field must be entered when adding a repeating block.");
		            dwr.engine.endBatch();	
		            return false;
			 }  				

			JPageForm.setAnswer(batchentry,"<%=request.getSession()%>");
			fillTable(subSecNm,pattern,questionbody);
			<%  if(map != null){ 
				Iterator itSSMap = map.entrySet().iterator();
				while(itSSMap.hasNext()){ 
					Map.Entry pair = (Map.Entry)itSSMap.next();%>
			if(subSecNm == "<%=pair.getKey().toString()%>"){
				<% batchrecinsert  =  (String[][])pair.getValue();
					 for(int i=0;i<batchrecinsert.length;i++){  
					String checknull1 = batchrecinsert[i][0];
					if(checknull1 != null && checknull1 != ""){%> 
				var key =   "<%=batchrecinsert[i][0]%>";
				if(key != null &&getElementByIdOrByName(key) != null){
					dwr.util.setValue(key, "");
					if(key+"Oth" != null &&getElementByIdOrByName(key+"Oth") != null){
						dwr.util.setValue(key+"Oth", "");
					}
					if(key+"UNIT" != null &&getElementByIdOrByName(key+"UNIT") != null){
						dwr.util.setValue(key+"UNIT", "");
					}
					if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){
						displaySelectedOptions(document.getElementById(key), key+"-selectedValues");
					}
					var type = "<%=batchrecinsert[i][5]%>"; 
					if(type == "1007" || type == "1013"){	
						if(document.getElementById(key) != null){ 
							autocompTxtValuesForJSPByElement(key);
						}
					}
					if(document.getElementById(key+"UNIT") != null ) {
						autocompTxtValuesForJSPByElement(key+"UNIT"); 
		            }
		        }
				<%} }%> 
			 }
			<%} }%> 
			var rowhide =getElementByIdOrByName("AddButtonToggle"+subSecNm);
			rowhide.style.display = ''
			var rowshow =getElementByIdOrByName("AddNewButtonToggle"+subSecNm);
			rowshow.style.display = 'none';
			var rowshow1 =getElementByIdOrByName("UpdateButtonToggle"+subSecNm);
			rowshow1.style.display = 'none';
			viewed = -1;
			dwr.engine.endBatch();
    }


    function editClicked(eleid,subSecNm) {
	unhideBatchImg(subSecNm);
	dwr.engine.beginBatch(); 
	clearClicked(subSecNm); 
	// id of the form "edit{id}", eg "edit42". We lookup the "42"
	var answer = answerCache[eleid.substring(4+subSecNm.length)];
	viewed = answer.id;	 
	var map = answer.answerMap;
	var mulVal;
	var othVal;
	var selectedmulVal;
	var handlemulVal;
	var code = "1013";	
	<% String[][] batchrecedit  =new String[20][7]; 
	if(map != null) {
		Iterator  itLab2 = map.entrySet().iterator(); 
		while(itLab2.hasNext()){  
			Map.Entry pair = (Map.Entry)itLab2.next();%>
			if(subSecNm == "<%=pair.getKey().toString()%>"){
		<% batchrecedit  =  (String[][])pair.getValue();
		    for(int i=0;i<batchrecedit.length;i++){
			if(  null != batchrecedit[i][0]) { 
				 String str1 = batchrecedit[i][0] + "UNIT" ;  %>
			dwr.util.setValue( "<%=batchrecedit[i][0]%>","");
			<%  str1 = batchrecedit[i][0] + "UNIT" ;  %>
                        dwr.util.setValue( "<%=str1%>","");
                        dwr.util.setValue( "<%=batchrecedit[i][0]%>"+"Oth","");
			var type = "<%=batchrecedit[i][5]%>"; 
			if( type == "1007" || type == "1013"){
				if(document.getElementById("<%=batchrecedit[i][0]%>") != null){
					autocompTxtValuesForJSPByElement("<%=batchrecedit[i][0]%>");
				}
			}
			<%  str1 = batchrecedit[i][0] + "UNIT"; %>
			if(document.getElementById("<%=str1%>") != null ) {
				   autocompTxtValuesForJSPByElement("<%=str1%>"); 
			}
			<%}}%>
			JPageForm.updateAnswer(answer,function(answer) { 
			   for (var key in answer.answerMap) { 
				//alert(answer.answerMap[key]);
				if(answer.answerMap[key] != null && answer.answerMap[key] != '' && answer.answerMap[key].indexOf(",") !=  -1){
				<% for(int i=0;i<batchrecedit.length;i++){
					  if(  null != batchrecedit[i][0]) { %> 
				if(key == "<%=batchrecedit[i][0]%>" && code == "<%=batchrecedit[i][5]%>"){
					mulVal = answer.answerMap[key]; 
					repeatingBlockHandleMultiVal (mulVal, key);
				}
				if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){
							displaySelectedOptions(document.getElementById(key), key+"-selectedValues");
				}

			<% }}%>	
			}else if(answer.answerMap[key] != null && answer.answerMap[key] != '' && answer.answerMap[key].indexOf(":") !=  -1 &&getElementByIdOrByName(key+"Oth") != undefined){	
					var otherVal = answer.answerMap[key];			 
					dwr.util.setValue(key,otherVal.substring(0,otherVal.indexOf(":")));
					dwr.util.setValue(key+"Oth", otherVal.substring(otherVal.indexOf(":")+1));
					document.getElementById(key+"Oth").disabled=false;
			} else if(answer.answerMap[key] != null && answer.answerMap[key] != '' && answer.answerMap[key].indexOf("$sn$") !=  -1){
					var fval = answer.answerMap[key];								 
					dwr.util.setValue(key,fval.substring(0,fval.indexOf("$sn$"))); 
					// alert(fval.substring(structVal.length+1,fval.length));
					dwr.util.setValue(key+"UNIT", fval.substring(fval.indexOf("$sn$")+4,fval.length));
			} else {    
				// alert( answer.answerMap[key] + "....");
				mulVal = answer.answerMap[key];
				if(mulVal  != null && mulVal.indexOf("$MulOth$") != -1){ 
					othVal =  mulVal.substring(mulVal.indexOf("$MulOth$")+8, mulVal.indexOf("#MulOth#"));
			                mulVal = mulVal.substring(0,mulVal.indexOf("$MulOth$") );
			                if(mulVal  != null && mulVal != ''){	
			                       getElementByIdOrByName(key).value = mulVal ;
					}
                                        if(othVal != null && othVal != ''){	 
			                        getElementByIdOrByName(key+"Oth").value = othVal;
			                }
			          }else{
					if(answer.answerMap[key] != null && answer.answerMap[key] != ''){ 
						document.getElementById(key).value = answer.answerMap[key];
					}
			} 
			//getElementByIdOrByName(key).value=answer.answerMap[key];        
			// alert("id = " +key+ " val = "+document.getElementById(key));
		}
		if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){
				displaySelectedOptions(document.getElementById(key), key+"-selectedValues");
		}
	}
	for (var key in answer.answerMap) {
	     <% for(int i=0;i<batchrecedit.length;i++){
		  if(  null != batchrecedit[i][0]) { %> 
		var type = "<%=batchrecedit[i][5]%>"; 
		if(key == "<%=batchrecedit[i][0]%>" &&( type == "1007" || type == "1013")){
			if(document.getElementById(key) != null){
				autocompTxtValuesForJSPByElement(key);
			}
		}
		<% String str1 = batchrecedit[i][0] + "UNIT" ;  %>
		if(document.getElementById("<%=str1%>") != null &&getElementByIdOrByName("<%=str1%>").value != null &&getElementByIdOrByName("<%=str1%>").value != '') {
			autocompTxtValuesForJSPByElement("<%=str1%>"); 
		}
	<%}}%> 		
	}    
	var rowhide =getElementByIdOrByName("AddButtonToggle"+subSecNm);
	rowhide .style.display = 'none';	
	var rowshow =getElementByIdOrByName("AddNewButtonToggle"+subSecNm);
	rowshow.style.display = 'none'
	var rowshow1 =getElementByIdOrByName("UpdateButtonToggle"+subSecNm);
	rowshow1.style.display = ''
	<% if(batchrecedit != null && batchrecedit.length > 0 ){
	    for(int i=0;i<batchrecedit.length;i++){
		  if(null != batchrecedit[i][0]) {  
			 String str = batchrecedit[i][0] +"L"; 
			 String str1 = batchrecedit[i][0] +"Oth"; %>
		var key = "<%=batchrecedit[i][0]%>";
		var keyL =  "<%=str%>";
		var keyOth = "<%=str1%>";
		if(document.getElementById(key) != null){
			// alert(document.getElementById(key).value);
			document.getElementById(key).disabled = false;
			document.getElementById(keyL).disabled = false;
			$j("#"+key).parent().parent().find("img").attr("disabled", false);
			$j("#"+key).parent().parent().find("input").attr("disabled", false);
		}
		if(document.getElementById(key+"Oth") != null){
			//alert(document.getElementById(key+"Oth").value);
			//alert(document.getElementById(key+"Oth").disabled);
			document.getElementById(key+"Oth").disabled = false;
			//alert(document.getElementById(key+"OthL").disabled);
			document.getElementById(key+"OthL").disabled = false;
			$j("#"+key+"Oth").parent().parent().find("input").attr("disabled", false);
			enableOrDisableOther(key) ;
		}
		<%}}}%>
	  	});
     		}
    	<%}}%>
     	dwr.engine.endBatch(); 
	}
	
	function fillTable(subSecNm,pattern,questionbody) {
		JPageForm.getAllAnswer(subSecNm,function(answer) {
			// Delete all the rows except for the "pattern" row
			dwr.util.removeAllRows(questionbody, { filter:function(tr) {
			return (tr.id != pattern);
		}});

		// Create a new set cloned from the pattern row
		var ans, id,rowclass="";
		<% if(map !=  null){
			Iterator    itLab3 = map.entrySet().iterator(); 
			String[][] batchrecview  = null; 
			while(itLab3.hasNext()){  
				Map.Entry pair = (Map.Entry)itLab3.next();%>
		if(subSecNm == "<%=pair.getKey().toString()%>"){
			<% batchrecview =  (String[][])pair.getValue();%>  
		if(answer !=null && answer.length != 0){
			for (var i = 0; i < answer.length; i++){
				ans = answer[i];		; 
				id = ans.id;	     
				dwr.util.cloneNode(pattern, { idSuffix:id });
			  <% for(int i=0;i<batchrecview.length;i++){
				String checknull = batchrecview[i][0]; 
				if(checknull != null && checknull != ""){ %>
				for (var key in ans.answerMap) {
					if(!(key == null || key == 'null') && key == "<%=batchrecview[i][0]%>"){
					    var val = ans.answerMap[key];
					    val = repeatingBlockFillValue(val);
					    dwr.util.setValue("table" + key + id, val);
					}
				}
		<%}}%>
		$(pattern + id).style.display = "";   
		answerCache[id] = ans;
		if(rowclass=="")
			rowclass="odd";	
			document.getElementById(pattern  + id).setAttribute("className",rowclass);
			// alert("Alert new "+document.getElementById(pattern  + id).getAttribute("className"));
			$j("#" + pattern  + id).css("background-color","white");
			// alert("Alert new "+document.getElementById(pattern  + id));
			if(rowclass=="odd"){
				rowclass = "odd";
			} else if(rowclass=="even"){
				rowclass = "odd";
			} 
		}
		var obj =getElementByIdOrByName("no"+pattern);	
		if(obj != null){
                       obj.style.display="none";	
                }
	} else{	
		var obj =getElementByIdOrByName("no"+pattern);
		if(obj != null){
                       obj.style.display="";
                } 
	}  //if else answer.length ==0 ends 
	}
	<%}}%>
	});
    }
           	
   
                		
    function deleteClicked(eleid,subSecNm,pattern,questionbody) {
    //alert(eleid); 
                		
      var t =getElementByIdOrByName(subSecNm); 	
      var len=0;
      //t.style.display = "block";    
      <%    String[][]  batchrecinsert2  =new String[20][7];  
       if(map != null){ 
		Iterator itLab1 = map.entrySet().iterator(); 
		while(itLab1.hasNext()){ 		   
		Map.Entry pair = (Map.Entry)itLab1.next();%>
	   if(subSecNm == "<%=pair.getKey().toString()%>"){
		<% batchrecinsert2  =  (String[][])pair.getValue();  
		 for(int i=0;i<batchrecinsert2.length;i++){   
		String checknull1 = batchrecinsert2[i][0];  
		if(checknull1 != null && checknull1 != ""){%> 
			var key =   "<%=batchrecinsert2[i][0]%>";
			if(key != null && key != 'undefined' && key != ''){
				len =  len +1;
			}
		<%} }%>
	   	}
	   <%} }%>
	for (var i = 0; i <len+1; i++){
		$j($j(t).find("tbody > tr:odd").get(i)).css("background-color","#DCE7F7");
		$j($j(t).find("tbody > tr:even").get(i)).css("background-color","#DCE7F7");
	}
	for (var i = 0; i < len+1; i ++)   {
		$j($j("#" + "questionbody"  +subSecNm).find("tr").get(i)).css("background-color","white");	
	}		
        // we were an id of the form "delete{id}", eg "delete42". We lookup the "42"
        var answer = answerCache[eleid.substring(6+subSecNm.length)];
        if (confirm("You have indicated that you would like to delete this row. Would you like to continue with this action?")) {
             dwr.engine.beginBatch();
             JPageForm.deleteAnswer(answer);
             fillTable(subSecNm,pattern,questionbody);
         <%  String[][] batchrecdel  =new String[20][7];  
	     if(map != null){ 
		Iterator itLab8 = map.entrySet().iterator();
		while(itLab8.hasNext()){		   
		   Map.Entry pair = (Map.Entry)itLab8.next();%>
	if(subSecNm == "<%=pair.getKey().toString()%>"){
	<% batchrecdel  =  (String[][])pair.getValue();
           for(int i=0;i<batchrecdel.length;i++){   
	   String delstr =  batchrecdel[i][0];
	   if(delstr != null && delstr != ""){ %>	
	   var key =   "<%=batchrecdel[i][0]%>";
	   if(key != null &&getElementByIdOrByName(key) != null){
		dwr.util.setValue(key, "");
		if(key+"Oth" != null &&getElementByIdOrByName(key+"Oth") != null){
			dwr.util.setValue(key+"Oth", "");
		}
		if(key+"UNIT" != null &&getElementByIdOrByName(key+"UNIT") != null){
			dwr.util.setValue(key+"UNIT", "");
		}	     
		if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){
			displaySelectedOptions(document.getElementById(key), key+"-selectedValues")
		}  
		var type = "<%=batchrecdel[i][5]%>";
		if(type == "1007" || type == "1013"){
			autocompTxtValuesForJSPByElement(key);
		}
		if(document.getElementById(key+"UNIT") != null ) {
			autocompTxtValuesForJSPByElement(key+"UNIT"); 
		}
	}
	<%}}%>
	}
	<%}}%>
	var rowhide =getElementByIdOrByName("AddButtonToggle"+subSecNm);
	rowhide.style.display = '';		                          
	var rowshow =getElementByIdOrByName("AddNewButtonToggle"+subSecNm);
	rowshow.style.display = 'none';
	var rowshow1 =getElementByIdOrByName("UpdateButtonToggle"+subSecNm);
	rowshow1.style.display = 'none';
	clearClicked(subSecNm);
	viewed = -1;
        dwr.engine.endBatch();
        }
} 


function clearQuestion() {
    viewed = -1;
    dwr.util.setValues({subsecNm:"Others", id:viewed,answerMap:null });
}

function getDropDownValues(newValue)
{
    JPageForm.getDropDownValues(newValue, function(data) {
        dwr.util.removeAllOptions(newValue);  
        dwr.util.addOptions(newValue,data,"key","value"); 
    });
}
                  
function viewClicked(eleid,subSecNm) {	
	var t =getElementByIdOrByName(subSecNm);
	var len=0;
	//t.style.display = "block";
     <% String[][]  batchrecinsert1  =new String[20][7];  
	if(map != null){
		Iterator itLab1 = map.entrySet().iterator(); 
		while(itLab1.hasNext()){  
			Map.Entry pair = (Map.Entry)itLab1.next();%>
	if(subSecNm == "<%=pair.getKey().toString()%>"){
     <% batchrecinsert1  =  (String[][])pair.getValue();
        for(int i=0;i<batchrecinsert1.length;i++){   
            String checknull1 = batchrecinsert1[i][0]; 
            if(checknull1 != null && checknull1 != ""){%> 
		var key =   "<%=batchrecinsert1[i][0]%>";
		if(key != null && key != 'undefined' && key != ''){
			len =  len +1;
		}
    <%}}%>
        }
    <%}}%>
	for (var i = 0; i <len+1; i++){
		$j($j(t).find("tbody > tr:odd").get(i)).css("background-color","#DCE7F7");
		$j($j(t).find("tbody > tr:even").get(i)).css("background-color","#DCE7F7");
	}
	for (var i = 0; i < len+1; i ++) {
		$j($j("#" + "questionbody"  +subSecNm).find("tr").get(i)).css("background-color","white");
	}
	var key;
	dwr.engine.beginBatch(); 
	clearClicked(subSecNm); 
	// id of the form "edit{id}", eg "edit42". We lookup the "42"
	var answer = answerCache[eleid.substring(4+subSecNm.length)];
	viewed = answer.id;	 
	var map = answer.answerMap;	 
	var mulVal;
	var selectedmulVal;
	var handlemulVal;
	var code = "1013";	
	<% String[][] batchrecedit1  = null;
	if(map != null) {
		Iterator  itLab2 = map.entrySet().iterator(); 
		while(itLab2.hasNext()){  
		Map.Entry pair = (Map.Entry)itLab2.next();%>
	if(subSecNm == "<%=pair.getKey().toString()%>"){
	<% batchrecedit1  =  (String[][])pair.getValue(); 
	     for(int i=0;i<batchrecedit1.length;i++){
		 if(  null != batchrecedit1[i][0]) {  
		 	String str1 = batchrecedit1[i][0] + "UNIT" ;  %>
		dwr.util.setValue( "<%=batchrecedit1[i][0]%>","");
		<%  str1 = batchrecedit1[i][0] + "UNIT" ;  %>
                dwr.util.setValue( "<%=str1%>","");
                dwr.util.setValue( "<%=batchrecedit1[i][0]%>"+"Oth","");
		var type = "<%=batchrecedit1[i][5]%>";
		if( type == "1007" || type == "1013"){
		    if(document.getElementById("<%=batchrecedit1[i][0]%>") != null){
			autocompTxtValuesForJSPByElement("<%=batchrecedit1[i][0]%>");
		    }
		}
		<%  str1 = batchrecedit1[i][0] + "UNIT" ;  %>
		if(document.getElementById("<%=str1%>") != null ) {
			autocompTxtValuesForJSPByElement("<%=str1%>"); 
		}
	<%}}%>
	JPageForm.updateAnswer(answer,function(answer) {
	    for (var key in answer.answerMap) { 	
		if(answer.answerMap[key] != null && answer.answerMap[key] != '' && answer.answerMap[key].indexOf(",") !=  -1){
			<% for(int i=0;i<batchrecedit1.length;i++){
			     if(  null != batchrecedit1[i][0]) { %> 
			if(key == "<%=batchrecedit1[i][0]%>" && code == "<%=batchrecedit1[i][5]%>"){
				mulVal = answer.answerMap[key]; 
				repeatingBlockHandleMultiVal (mulVal, key);
	    		}
	    if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){
		displaySelectedOptions(document.getElementById(key), key+"-selectedValues")
	    }					
	<%}}%>					
	}else if(answer.answerMap[key] != null && answer.answerMap[key] != '' && answer.answerMap[key].indexOf(":") !=  -1 &&getElementByIdOrByName(key+"Oth") != undefined){	
		var otherVal = answer.answerMap[key];
		dwr.util.setValue(key,otherVal.substring(0,otherVal.indexOf(":")));
		dwr.util.setValue(key+"Oth", otherVal.substring(otherVal.indexOf(":")+1));
		document.getElementById(key+"Oth").disabled=false;
	}else if(answer.answerMap[key] != null && answer.answerMap[key] != '' && answer.answerMap[key].indexOf("$sn$") !=  -1){	
		var fval = answer.answerMap[key];
		dwr.util.setValue(key,fval.substring(0,fval.indexOf("$sn$"))); 
		dwr.util.setValue(key+"UNIT", fval.substring(fval.indexOf("$sn$")+4,fval.length));
	}else {    
		mulVal = answer.answerMap[key]; 						
		if(mulVal != null && mulVal.indexOf("$MulOth$") != -1){
			othVal =  mulVal.substring(mulVal.indexOf("$MulOth$")+8, mulVal.indexOf("#MulOth#"));
			mulVal = mulVal.substring(0,mulVal.indexOf("$MulOth$") );
			if(mulVal  != null && mulVal  != ''){	
			    getElementByIdOrByName(key).value  = othVal ;
			}
                 if(othVal != null && othVal != ''){
                       getElementByIdOrByName(key+"Oth").value = othVal ;
		}
	}else{
		if(answer.answerMap[key] != null && answer.answerMap[key] != ''){
			document.getElementById(key).value  = answer.answerMap[key];
		}
	}

	}
	if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){
		displaySelectedOptions(document.getElementById(key), key+"-selectedValues");
	}
	}
	for (var key in answer.answerMap) {
		<% for(int i=0;i<batchrecedit1.length;i++){
		     if(  null != batchrecedit1[i][0]) { %>
	    var type = "<%=batchrecedit1[i][5]%>";
	    if(key == "<%=batchrecedit1[i][0]%>" &&( type == "1007" || type == "1013")){
		if(document.getElementById(key) != null){
			autocompTxtValuesForJSPByElement(key);
		}
	    }
	<% String str1 = batchrecedit1[i][0] + "UNIT" ;  %>
	if(document.getElementById("<%=str1%>") != null &&getElementByIdOrByName("<%=str1%>").value != null &&getElementByIdOrByName("<%=str1%>").value != '') {
		autocompTxtValuesForJSPByElement("<%=str1%>"); 
	}	
	<%}}%> 	
	}
	var rowhide =getElementByIdOrByName("AddButtonToggle"+subSecNm);
	rowhide .style.display = 'none';
	var rowshow =getElementByIdOrByName("AddNewButtonToggle"+subSecNm);
	rowshow.style.display = 'none';
	var rowshow1 =getElementByIdOrByName("UpdateButtonToggle"+subSecNm);
	rowshow1.style.display = '';
	<% if(batchrecedit1 != null && batchrecedit1.length > 0 ){
	     for(int i=0;i<batchrecedit1.length;i++){
		  if(null != batchrecedit1[i][0]) { 
			 String str = batchrecedit1[i][0] +"L";
		 	String str1 = batchrecedit1[i][0] +"Oth"; %>
		var key = "<%=batchrecedit1[i][0]%>";
		var keyL =  "<%=str%>";
		var keyOth = "<%=str1%>";
		if(document.getElementById(key) != null){
			document.getElementById(key).disabled = false;
			document.getElementById(keyL).disabled = false;
			$j("#"+key).parent().parent().find("img").attr("disabled", false);
			$j("#"+key).parent().parent().find("input").attr("disabled", false);
		}
		if(document.getElementById(key+"Oth") != null){					
			document.getElementById(key+"Oth").disabled = true;
			$j("#"+key+"Oth").parent().parent().find("input").attr("disabled", false);
		}
	<%}}}%>		

	<% String[][] batchrecview  = null;
	if(map != null) {
		Iterator  itLab21 = map.entrySet().iterator(); 
		while(itLab21.hasNext()){  
			pair = (Map.Entry)itLab21.next();%>
	if(subSecNm == "<%=pair.getKey().toString()%>"){
	    <%  batchrecview  =  (String[][])pair.getValue(); 
	    for(int i=0;i<batchrecview.length;i++){
		 if(null != batchrecview[i][0]) {  
		     String str = batchrecview[i][0] +"L"; 
		     String str1 = batchrecview[i][0] +"Oth"; %>
	    key = "<%=batchrecview[i][0]%>";
	    var keyL =  "<%=str%>";
	    var keyOth = "<%=str1%>";
	    if(document.getElementById(key) != null){
		document.getElementById(key).disabled = true;
		document.getElementById(keyL).disabled = true;
		$j("#"+key).parent().parent().find("img").attr("disabled", true);
		$j("#"+key).parent().parent().find("input").attr("disabled", true);
	    }
	if(key+"-selectedValues" != null &&getElementByIdOrByName(key+"-selectedValues") != null){		
		document.getElementById(key+"-selectedValues").disabled = true;
	}
	if(document.getElementById(key+"Oth") != null){
		document.getElementById(key+"Oth").disabled = true;
		document.getElementById(key+"OthL").disabled = true;
		$j("#"+key+"Oth").parent().parent().find("input").attr("disabled", 	true);
	}

	<%}}%>
	}		        
	<%}}%>				               
	var rowhide =getElementByIdOrByName("AddButtonToggle"+subSecNm);
	rowhide .style.display = 'none';		
	var rowshow =getElementByIdOrByName("AddNewButtonToggle"+subSecNm);
	rowshow.style.display = '';
	var rowshow1 =getElementByIdOrByName("UpdateButtonToggle"+subSecNm);
	rowshow1.style.display = 'none'  
	});
	}
	<%}}%>
	dwr.engine.endBatch();
        }      //viewClicked
        
   function clearClicked(subSecNm) {
	var key;
	<% String[][] batchrecclear  = null;
	if(map != null) {
		Iterator  itLab5 = map.entrySet().iterator(); 
		while(itLab5.hasNext()){  
			Map.Entry pair = (Map.Entry)itLab5.next();%>
	if(subSecNm == "<%=pair.getKey().toString()%>"){
	<%  batchrecclear  =  (String[][])pair.getValue();
	 for(int i=0;i<batchrecclear.length;i++){ 
	 	if (batchrecclear[i][0] == null) continue;
		String checknull1 = batchrecclear[i][0];%>    
	    var key =   "<%=batchrecclear[i][0]%>";
	    var componentType = "<%=batchrecclear[i][5]%>";
	<%if(checknull1 != null && checknull1 != "" ){%>
	    if(key != null &&getElementByIdOrByName(key) != null){
		repeatingBatchClearFields(key, componentType);
	}   
	<%}}%>
	viewed = -1;
	}
	<%}}%>
	var rowhide =getElementByIdOrByName("AddButtonToggle"+subSecNm);
	rowhide.style.display = ''; 
	var rowshow =getElementByIdOrByName("AddNewButtonToggle"+subSecNm);
	rowshow.style.display = 'none';             
	var rowshow1 =getElementByIdOrByName("UpdateButtonToggle"+subSecNm);
	rowshow1.style.display = 'none';
    } //clearClicked       

   function clearRepeatingblk(subSecNm)    {
	JPageForm.clearRepeatingblk(subSecNm);           		
	fillTable(subSecNm,"pattern"+subSecNm,"questionbody"+subSecNm);	
   }
   function unhideBatchImg(subSecNm)
   {
    	var t =getElementByIdOrByName(subSecNm); 	
        var len=0;
    	//t.style.display = "block";    
    	<% if(map != null){ 
		Iterator itLab1 = map.entrySet().iterator();
		while(itLab1.hasNext()){   
		Map.Entry pair = (Map.Entry)itLab1.next();%>
	if(subSecNm == "<%=pair.getKey().toString()%>"){
	<% batchrecinsert  =  (String[][])pair.getValue();   
         for(int i=0;i<batchrecinsert.length;i++){  
	    String checknull1 = batchrecinsert[i][0];  
	    if(checknull1 != null && checknull1 != ""){%> 
		var key =   "<%=batchrecinsert[i][0]%>";
		if(key != null && key != 'undefined' && key != ''){
			len = len +1;
		}
	<%}}%>
	 }
	<%}}%>
	for (var i = 0; i < len+1; i ++)   {
		//alert($j($j(t).find("tbody > tr:odd").get(i)).css("background-color","#95BAEF"));
		$j($j(t).find("tbody > tr:odd").get(i)).css("background-color","#95BAEF");
		$j($j(t).find("tbody > tr:even").get(i)).css("background-color","#95BAEF");
	}
	//  	alert( $j("#" + "questionbody"  +subSecNm));
	for (var i = 0; i < len+1; i ++)   {
		$j($j("#" + "questionbody"  +subSecNm).find("tr").get(i)).css("background-color","white");	
	}					       
	$j("#" + "nopattern"  +subSecNm).css("background-color","white");
    } //unhide batch image	

           		                  
           		     
                    
                                           
               ]]> </xsl:text>   
          
          </script>  
          
     <style type="text/css">
            table.FORM {width:100%; margin-top:15em;}
            td.altHdr {font-family:Arial,sans-serif; font-size:14.6667px; font-weight:bold; font-style:normal; color:#CC5200;}
     </style>
    </head>
        <xsl:text disable-output-escaping="yes"><![CDATA[ 
     <% 
    int subSectionIndex = 0;

    String tabId = "";   


      String [] sectionNames  = {]]></xsl:text><xsl:for-each select="descendant-or-self::*/SectionName"><xsl:text disable-output-escaping="yes">"</xsl:text><xsl:value-of select="."/><xsl:text disable-output-escaping="yes">"</xsl:text><xsl:if test="not(position() = last())"><xsl:text disable-output-escaping="yes">,</xsl:text></xsl:if></xsl:for-each><xsl:text disable-output-escaping="yes"><![CDATA[};]]></xsl:text>
    <xsl:text disable-output-escaping="yes"><![CDATA[ ;
  
    int sectionIndex = 0;
    String sectionId = "";    
    
        String PatientRevision = (request.getAttribute("PatientRevision") == null) ? "" : ((String)request.getAttribute("PatientRevision"));
        String caseLocalId = (request.getAttribute("DSInvUid") == null) ? "" : ((String)request.getAttribute("DSInvUid"));
        String perMprUid =  (request.getAttribute("DSPatientPersonUID") == null) ? "" : ((String)request.getAttribute("DSPatientPersonUID"));                                   
        String messageInd =  (request.getAttribute("messageInd") == null) ? "" : ((String)request.getAttribute("messageInd"));
        String templateNm =   (request.getAttribute("pgPageName") == null) ? "" : ((String)request.getAttribute("pgPageName"));
        if (templateNm == "") 
         	templateNm =   (request.getSession().getAttribute("pgPageName") == null) ? "" : ((String)request.getSession().getAttribute("pgPageName"));
        String newTemplateNm = (request.getSession().getAttribute("templateNm") == null) ? "" : ((String)request.getSession().getAttribute("templateNm"));
         
        
        String confirmation =  (request.getAttribute("confirmation") == null) ? "" : ((String)request.getAttribute("confirmation"));
        String tempActiveInd =  (request.getAttribute("ActiveInd") == null) ? "" : ((String)request.getAttribute("ActiveInd"));
  %>       
	<% String printMode = (request.getAttribute("mode") == null) ? "" : ((String)request.getAttribute("mode"));
 	if (printMode.equals("print")) { %>
    	  <body class onload="startTimer();autocompTxtValuesForJSP();handleInputElts();disablePrintLinks();" onunload="return closePrintFriendlyWindow();">
    	<% }else { %>
	 <body class onload="startTimer();autocompTxtValuesForJSP();populateBatchRecords();pgCheckDynamicRulesOnLoad();">
	<% } %>
        <div id="pageview"></div>        
        <!-- Container Div: To hold top nav bar, button bar, body and footer -->
        <div id="doc3">
            <html:form action="/PreviewPage.do">
                <!-- Body div -->
                <div id="bd">
                    <!-- Top Nav Bar and top button bar -->
                    <%@ include file="/jsp/topNavFullScreenWidth.jsp" %>  
                     <!-- Page Errors -->
                      
                    <!-- For create/edit mode only -->
                    <logic:notEqual name="PageForm" property="actionMode" value="Preview">
                       
            
                      
                       
                        <!-- Patient summary -->
                        <%--@ include file="/pam/patient/PatientSummary.jsp" --%> 
                                             
                        <!-- Required Field Indicator -->
                        <div style="text-align:right; width:100%;"> 
                            <span class="boldTenRed"> * </span>
                            <span class="boldTenBlack"> Indicates a Required Field </span>  
                        </div>
                    </logic:notEqual>  
                     <%@ include file="/pagemanagement/rendering/ViewPage.jsp" %>   
                      <%@ include file="/jsp/feedbackMessagesBar.jsp" %>                        
                         <% if("ATD".equalsIgnoreCase(messageInd)){ %>
                            <div class="infoBox success" style="text-align: left;">
	                            <%= templateNm %>&nbsp;page has been successfully added. 
	                        </div>     
                         
                          <% } else if("ETD".equalsIgnoreCase(messageInd)){ %>
                            <div class="infoBox success" style="text-align: left;">
	                        <%= templateNm %>&nbsp;page has been successfully updated. 
	                     </div>     
                          
                          <% } else if("PTP".equalsIgnoreCase(messageInd)){ %>
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;page has been successfully published.
                            </div>    
                          <% }  else if("PFP".equalsIgnoreCase(messageInd)){ %>
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;page has been successfully published. Please restart the application server to make the changes effective in the system.
                            </div> 
                          <% } else if("SAT".equalsIgnoreCase(messageInd)){ %>
                            <div class="infoBox success" style="text-align: left;">
                                <%= newTemplateNm %>&nbsp;page template has been successfully saved.
                            </div>    
                          <% }else if("INACTIVE".equalsIgnoreCase(messageInd)) {%> 
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;has been made inactive in the system.
                            </div>
                           <% }else if("active".equalsIgnoreCase(messageInd)) {%> 
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;has been made active in the system.
                            </div>  
                          <% } else if("PUB".equalsIgnoreCase(messageInd)) {%> 
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;page has been successfully published.
                            </div>      
                             <% } else if("CND".equalsIgnoreCase(messageInd)) {%> 
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;page has been successfully added to the system.
                            </div> 
                             <% } else if("CNP".equalsIgnoreCase(messageInd)) {%> 
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;page is in Draft state. You can now edit the page details, rules, and layout. 
                             </div>      
                             <% } else if("DEL".equalsIgnoreCase(messageInd)) {%> 
                            <div class="infoBox success" style="text-align: left;">
                                <%= templateNm %>&nbsp;page draft has been successfully deleted.
                            </div>    
                            <% } else if("PORT".equalsIgnoreCase(messageInd)) {%>
                            	<div class="infoBox success" style="text-align: left;"> 
                                	${portBeforeUsingPageMessage}
                                </div>                      
                          <% }else {%> 
                          
                          <% } %>
                            <% if("uploadsuccess".equalsIgnoreCase(confirmation)){ %>
                            <div class="infoBox success" style="text-align: left;">
	                            <%= templateNm %>&nbsp;has been successfully added to the system.
	                            
	                        </div>     
                          <%}%>
                           <% if("exportsuccess".equalsIgnoreCase(confirmation)){ %>
                            <div class="infoBox success" style="text-align: left;">
	                            <%= templateNm %>&nbsp;has been successfully exported.
	                            
	                        </div>     
                          <%}%>
                        
                      <Table width="100%">
                      <TR>
                  <TD align="left" class="altHdr" style="border-width:0px 0px 2px 0px; border-style:solid; border-color:#EFF7FF;">
                  <% if((request.getAttribute("Template") != null && (request.getAttribute("Template").toString().equalsIgnoreCase("Template"))) ) { %>
                     View Template 
                  <% } else {%>
                     View Page 
                  <%}%>
                  </TD>
                      <TD align="right" style="border-width:0px 0px 2px 0px; border-style:solid; border-color:#EFF7FF;">
                      <% if((request.getAttribute("published") == null) || (request.getAttribute("published") != null && !(request.getAttribute("published").toString().equalsIgnoreCase("published"))) ) {
                      	 if((request.getAttribute("Template") == null) || (request.getAttribute("Template") != null && !(request.getAttribute("Template").toString().equalsIgnoreCase("Template"))) ) { %>
                       <font color ="red"><b><i> DRAFT </i></b> </font color>
                       <% }} %> &nbsp;
                      </TD>
                      </TR>                 
                      
                      
                      <tr>
                        <td colspan="2">
                <div class="grayPageNameBar" style="text-align:left; font-size:1.1em; font-weight:bold;">
                    <b>  <%= templateNm %>  </b>
                </div>
                <div class="expander"> </div>
                        </td>
                      </tr>
                      
                      </Table><br>
                      
                         ]]>  </xsl:text>
                        <!-- Tab container -->
      <!-- <layout:tabs width="100%" styleClass="tabsContainer"> -->
     <xsl:comment> ################### PAGE TAB ###################### --</xsl:comment>
      <xsl:text disable-output-escaping="yes"><![CDATA[<layout:tabs width="100%" styleClass="tabsContainer">]]></xsl:text>
	  <xsl:variable name="BusObj" select="BusinessObject"/>
       <xsl:for-each select="PageTab">      <!-- Setup Include for Tab on the Page -->
        <xsl:variable name="thisTab" select="TabName" />
        <xsl:variable name="TabVisible" select="Visible" />
	<xsl:choose>
	<xsl:when test="$TabVisible= 'T'">
        <xsl:text disable-output-escaping="yes"> <![CDATA[<layout:tab key="]]></xsl:text><xsl:value-of select="normalize-space(TabName)"/><xsl:text disable-output-escaping="yes"><![CDATA[">]]></xsl:text>
        <xsl:text disable-output-escaping="yes"><![CDATA[<jsp:include page="view]]></xsl:text><xsl:value-of select="translate(TabName,' ','')"/><xsl:text disable-output-escaping="yes"><![CDATA[.jsp"/>]]></xsl:text>
        <xsl:text disable-output-escaping="yes"><![CDATA[</layout:tab>]]></xsl:text>  <!-- End Layout Tab -->
        </xsl:when>
        </xsl:choose>
        </xsl:for-each>   <!-- PageTab  -->
        <xsl:if test="$BusObj='INV'">
           <xsl:text disable-output-escaping="yes"><![CDATA[
        <layout:tab key="Contact Records">
               <jsp:include page="/pagemanagement/contactTracing/view/viewContactTracing.jsp"/> 
        </layout:tab> 
        ]]>  </xsl:text>
             <xsl:text disable-output-escaping="yes"><![CDATA[
	<layout:tab key="Supplemental Info">
	       <jsp:include page="/pagemanagement/supplemental/PreviewSupplementalInformation.jsp"/> 
	</layout:tab>  ]]>  </xsl:text>
	</xsl:if>
          <xsl:text disable-output-escaping="yes"><![CDATA[</layout:tabs>]]></xsl:text>  <!-- End Layout Tabs -->
          <xsl:text disable-output-escaping="yes"><![CDATA[
          
             <!-- Bottom button bar -->     
    
              <% request.setAttribute("bottom","true"); %>
              <%@ include file="/pagemanagement/rendering/ViewPage.jsp" %>            
             
        
         
    </html:form>
      </div> <!-- Container Div -->
    </body>
    ]]></xsl:text> 
</html>

</xsl:template>
</xsl:stylesheet>
