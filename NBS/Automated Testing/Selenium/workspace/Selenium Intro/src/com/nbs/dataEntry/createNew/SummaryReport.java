package com.nbs.dataEntry.createNew;

import java.io.IOException;
import java.util.List;
import java.util.Random;
import org.junit.Test;
import org.junit.After;
import org.junit.Before;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import com.nbs.common.*;
import com.rtts.utilities.DataFile;
import com.rtts.utilities.Log;

public class SummaryReport {

	public WebDriver driver;
	public Log log;
	DataFile df;
	public String Data_File_Path, Log_File_Path;

	@Before
	public void setUp() throws Exception {
		Login login = new Login();
		login.Setup();
		driver = login.getDriver();
		Data_File_Path = login.Data_File_Path + "dataEntry.createNew\\SummaryReport.xls";
		Log_File_Path = login.Log_File_Path;
	}

	@Test
	public void Populate_SummaryReport() throws Exception {
		log = new Log("SummaryReport", Log_File_Path);
		df = new DataFile(Data_File_Path, "SummaryReport");
		int colCount = df.getColCount() - 3;
		for (int col = 1; col <= colCount; col++) {
			try {
				// Click on the Data Entry - Summary Data link on the Home Page
				driver.findElement(By.linkText("Data Entry")).click();
				driver.findElement(By.linkText("Summary Data")).click();
				ReadMetaData summary_Report = new ReadMetaData();
				summary_Report.setUpDataFile(df);

				// Read the values of County, MMWR Year, MMWR Week fields from
				// excel and write them to log
				String county = summary_Report.getFieldValue("County", col);
				String mmwr_year = summary_Report.getFieldValue("MMWR Year", col);
				String mmwr_week = summary_Report.getFieldValue("MMWR Week", col);
				log.write("County " + "'" + county + "'" + " MMWR Year " + "'" + mmwr_year + "'" + " MMWR Week " + "'"
						+ mmwr_week + "'");

				summary_Report.setUpDriver(driver);
				summary_Report.setUpLog(log);

				// Read the Meta Data and populate the fields
				summary_Report.ReadData(col);

				// Click on Get Summary Reports
				driver.findElement(By
						.xpath("//*[@id='1']/tbody/tr[2]/td/table/tbody/tr[3]/td/table/tbody/tr[9]/td[3]/table/tbody/tr/td/input"))
						.click();
				String result = driver.findElement(By.xpath("//*[@id='root']/tbody/tr[1]/td/table")).getText();

				if (result.contains("There is no information to display")) {
					log.writeSubSection("There is no summary report, adding a new one");
					add_Record();

				} else {
					int randomNum = randInt(1, 2);// Generating random number
													// for add/edit the record
					System.out.println("random num for add/edit condition" + randomNum);
					log.writeSubSection("Summary Report exists");
					if (randomNum == 1) {
						add_Record();
					} else
						edit_Record();
				}

			} catch (Exception e) {
				log.writeSubSection("There is an error creating/updating the Summary Report", "", false);
				log.takeSnapshot(driver);
			}
			log.writeSubSection_RecordStatus();
		}

	}

	
	public void populate_Report(String condition) throws IOException {
		String source = "";
		int randomNum = randInt(1, 2);
		if (randomNum == 1)
			source = "Middle School";
		else
			source = "High School";
		driver.findElement(By.name("report[i].observationVO_s[0].obsValueCodedDT_s[0].code_textbox")).sendKeys(source);

		randomNum = (randInt(1, 50)); // Generating a random number between 1
										// and 50 for the count value
		driver.findElement(By.name("report[i].observationVO_s[1].obsValueNumericDT_s[0].numericValue1_s"))
				.sendKeys(Integer.toString(randomNum));
		driver.findElement(By.name("report[i].observationVO_s[2].obsValueTxtDT_s[0].valueTxt"))
				.sendKeys("Comments generated by Selenium");
		// click on Add count
		driver.findElement(By.xpath("//*[@id='BatchEntryAddButtonCount']")).click();
		// Check if Source already exists
		String source_msg = driver.findElement(By.id("nestedErrorMsgCount")).getText();
		if (source_msg.contains("The source already exists in the counts batch entry box.")) {
			randomNum = randInt(1, 2);
			if (randomNum == 1) {
				driver.findElement(By.linkText("Edit")).click();
				randomNum = (randInt(1, 50)); // Generating a random number
												// between 1 and 50 for the
												// count value
				driver.findElement(By.name("report[i].observationVO_s[1].obsValueNumericDT_s[0].numericValue1_s"))
						.clear();
				driver.findElement(By.name("report[i].observationVO_s[1].obsValueNumericDT_s[0].numericValue1_s"))
						.sendKeys(Integer.toString(randomNum));
				driver.findElement(By.xpath("//*[@id='BatchEntryAddButtonCount']")).click();
				driver.findElement(By.id("Submit")).click();
				log.writeSubSection("Edited the count " + Integer.toString(randomNum) + " for the source " + source,
						condition, true);
			} else {
				driver.findElement(By.linkText("Delete")).click();
				driver.findElement(By.id("Submit")).click();
				log.writeSubSection("Deleted the count for the source " + source, condition, true);

			}
		} else if (source_msg.contains("One or more fields are in error")) {
			log.writeSubSection("There is an error adding the count for the condition", condition, false);
			log.takeSnapshot(driver);
			driver.findElement(By.id("Cancel")).click();
			driver.switchTo().alert().accept();
		}

		else {
			log.writeSubSection("Added the count " + Integer.toString(randomNum) + " for source " + source, condition,
					true);
			driver.findElement(By.id("Submit")).click();
			System.out.println("Source message" + source_msg);
		}
	}

	public void add_Record() throws Exception {
		List<WebElement> optionCount = driver.findElements(By.xpath("//*[@id='Condition']/option"));
		int count = optionCount.size();
		if (count > 1) {
			System.out.println("count" + count);
			int randomNum = randInt(2, count); // Getting random Condition from
												// condition drop down
			driver.findElement(By.name("Condition_button")).click();
			String condition = driver.findElement(By.xpath("//*[@id='Condition']/option[" + randomNum + "]")).getText();
			driver.findElement(By.name("Condition_textbox")).sendKeys(condition);
			// click on Add Summary Report
			driver.findElement(By
					.xpath("//*[@id='1']/tbody/tr[2]/td/table/tbody/tr[3]/td/table/tbody/tr[17]/td[3]/table/tbody/tr/td/input"))
					.click();
			// click on the condition that is added
			driver.findElement(By.linkText(condition)).click();
			// Enter the data
			populate_Report(condition);
		} else {
			log.writeSubSection("There are no conditions to add, adding/editing/deleting count for existing condition");
			edit_Record();
		}

	}

	public void edit_Record() throws Exception {
		List<WebElement> li = driver.findElements(By.xpath("//*[@id='sortParent']/td[1]"));
		int count = li.size();
		int randomNum = randInt(1, count);
		String condition = li.get(randomNum - 1).getText();
		li.get(randomNum - 1).click();
		populate_Report(condition);

	}

	public static int randInt(int min, int max) {
		Random rand = new Random();
		int randomNum = rand.nextInt((max - min) + 1) + min;
		return randomNum;
	}

	@After
	public void close() throws Exception {
		log.close();
		df.close();
		driver.close();
	}
}
