<?xml version="1.0"?>
<xsp:page language="java" xmlns:xsp="http://apache.org/xsp" xmlns:session="http://apache.org/xsp/session/2.0" xmlns:nedss="http://www.cdc.gov/nedss/logicsheet/nedss" xmlns:xsp-response="http://apache.org/xsp/response/2.0" xmlns:xsp-request="http://apache.org/xsp/request/2.0" xmlns:util="http://apache.org/xsp/util/2.0">
	<xsp:structure>
		<xsp:include>java.util.*</xsp:include>
		<xsp:include>java.sql.Timestamp</xsp:include>
		<xsp:include>gov.cdc.nedss.util.*</xsp:include>
		<xsp:include>gov.cdc.nedss.entity.entityid.dt.*</xsp:include>
		<xsp:include>gov.cdc.nedss.locator.dt.*</xsp:include>
		<xsp:include>gov.cdc.nedss.entity.person.dt.*</xsp:include>
		<xsp:include>gov.cdc.nedss.entity.person.vo.*</xsp:include>
		<xsp:include>gov.cdc.nedss.entity.person.util.*</xsp:include>
		<xsp:include>gov.cdc.nedss.webapp.nbs.logicsheet.helper.CachedDropDownValues</xsp:include>
		<xsp:include>gov.cdc.nedss.systemservice.nbscontext.NBSContext</xsp:include>
		<xsp:include>gov.cdc.nedss.webapp.nbs.action.person.util.PersonUtil</xsp:include>
	</xsp:structure>
	<nedss:Declarations/>
	<nedss:StateDescTxt/>
	<nedss:getTitle/>
	<content>
		<xsp:attribute name="form">
			<xsp-request:get-attribute name="formHref"/>
		</xsp:attribute>
		<xsp:attribute name="title">
			<xsp:expr>getTitle()</xsp:expr>
		</xsp:attribute>
		<nedss:SearchResultForMerge/>
		<link-bar/>
		<button-bar>
			<xsp:logic>if(person .size()>1){</xsp:logic>
			<right>
				<label>Compare</label>
				<javascript-action>openWindowForCompare();</javascript-action>
			</right>
			<xsp:logic>}</xsp:logic>
			<xsp:logic><![CDATA[if(person.size()>1 && request.getAttribute("ContextTaskName")!=null && request.getAttribute("ContextTaskName").equals("MergeCandidateList2")){]]></xsp:logic>
			<right>
				<label>Merge</label>
				<javascript-action>mergePersonsForSI();</javascript-action>
			</right>
			<right>
				<label>No Merge</label>
				<javascript-action>callNoMergePerson();</javascript-action>
			</right>
			<xsp:logic><![CDATA[}else if(person.size()>1 && request.getAttribute("ContextTaskName")!=null && request.getAttribute("ContextTaskName").equals("MergeCandidateList1")){]]></xsp:logic>
			<right>
				<label>Merge</label>
				<javascript-action>mergePersons();</javascript-action>
			</right>
			<xsp:logic><![CDATA[}]]></xsp:logic>
			<right>
				<label>Cancel</label>
				<javascript-action>cancel('<xsp-request:get-attribute name="Cancel"/>');</javascript-action>
			</right>
		</button-bar>
		<javascript-files>
			<import>EntitySearch.js</import>
			<import>searchResultsSpecific.js</import>
			<import>MergePersonSpecific.js</import>
		</javascript-files>
		<AddNewPersonHref location="/nedss/servlet/gov.cdc.nedss.cdm.ComparePersonServlet"/>
		<session:get-id as="xml"/>
		<refineSearchHref>
			<xsp-request:get-attribute name="refineSearchHref"/>
		</refineSearchHref>
		<newSearchHref>
			<xsp-request:get-attribute name="newSearchHref"/>
		</newSearchHref>
		<searchCriteria>
			<xsp:expr>sSearchCriteria </xsp:expr>
		</searchCriteria>
		<currentIndex>
			<xsp:expr>currentIndex</xsp:expr>
		</currentIndex>
		<groupNo>
			<xsp-request:get-attribute name="groupsAvailableToMerge"/>
		</groupNo>
		<groupAOD>
			<xsp-request:get-attribute name="candidateQueueCreationDate"/>
		</groupAOD>
		<totalRecords>
			<xsp:expr>numberOfRecords</xsp:expr>
		</totalRecords>
		<totalCounts>
			<xsp:expr>totalCount</xsp:expr>
		</totalCounts>
		<NoOfRows>
			<xsp-request:get-attribute name="NoOfRows"/>
		</NoOfRows>
		<xsp:logic><![CDATA[ if (request.getAttribute("ContextTaskName")!=null && request.getAttribute("ContextTaskName").equals("MergeCandidateList1")){]]></xsp:logic>
		<text>
			<first/>
		</text>
		<xsp:logic><![CDATA[}]]></xsp:logic>
		<xsp:logic><![CDATA[ if (request.getAttribute("ContextTaskName")!=null && request.getAttribute("ContextTaskName").equals("MergeCandidateList2")){]]></xsp:logic>
		<text>
			<second/>
		</text>
		<text>
			<third/>
		</text>
		<text>
			<fourth/>
		</text>
		<xsp:logic><![CDATA[ if (person.size() >1){]]></xsp:logic>
		<text>
			<fifth/>
		</text>
		<xsp:logic><![CDATA[ }else{]]></xsp:logic>
		<text>
			<sixth/>
		</text>
		<xsp:logic><![CDATA[}}]]></xsp:logic>
		<xsp:logic>if(person.size()>1){</xsp:logic>
		<text>
			<seventh/>
		</text>
		<xsp:logic>}</xsp:logic>
		<xsp:logic><![CDATA[ if(person.size() == 1 && request.getAttribute("ContextTaskName")!=null && request.getAttribute("ContextTaskName").equals("MergeCandidateList1")){]]></xsp:logic>
		<text>
			<eighth/>
		</text>
		<xsp:logic><![CDATA[}]]></xsp:logic>
		<header>
			<nedss:writeErrorMessages/>
			<column>
				<name>Compare</name>
			</column>
			<column>
				<name>Full Name</name>
			</column>
			<column>
				<name>Age/DOB/Sex</name>
			</column>
			<!--column>
				<name>Sex</name>
			</column-->
			<column>
				<name>Address</name>
			</column>
			<column>
				<name>Telephone/ID
				</name>
			</column>
			<column>
				<name>Merge</name>
			</column>
			<column>
				<name>Surviving PatientID</name>
			</column>
		</header>
		<records>
			<nedss:MergeList>
				<record>
					<uid>
						<xsp:attribute name="type">
							<xsp:expr>sOperationType</xsp:expr>
						</xsp:attribute>
						<xsp:expr>pvo.getPersonUID()</xsp:expr>
					</uid>
					<!--		code to gather all the person names		-->
					<column>
						<checkbox name="compare" default="no" value="T">
							<value>
								<xsp:expr>pvo.getPersonUID()</xsp:expr>
							</value>
						</checkbox>
					</column>
					<column>
						<nedss:DisplayPersonNameArray>
							<name>
								<use-code>
									<xsp:expr>name.getNmUseCd()</xsp:expr>
								</use-code>
								<first-name>
									<xsp:expr>name.getFirstNm()</xsp:expr>
								</first-name>
								<last-name>
									<xsp:expr>name.getLastNm()</xsp:expr>
								</last-name>
							</name>
						</nedss:DisplayPersonNameArray>
					</column>
					<column>
						<xsp:logic><![CDATA[
									if(pvo.getPersonDOB() != null ) {
	                      		]]></xsp:logic>
						<xsp:expr>PersonUtil.displayAgeForPatientResults(pvo.getPersonDOB())</xsp:expr>
						<xsp:logic><![CDATA[
									}
	                      		]]></xsp:logic>
	                      		<br></br>
						<xsp:expr>pvo.getPersonDOB()</xsp:expr>
						<br></br>
						<xsp:expr>pvo.getCurrentSex()</xsp:expr>

					</column>
					<!--column>
						<xsp:expr>pvo.getCurrentSex()</xsp:expr>
					</column-->
					<column>
						<xsp:logic><![CDATA[
								ArrayList locators = (ArrayList) pvo.getPersonLocatorsColl();
									if(!(locators == null)) {
										for (int k =0; k < locators.size(); k++)	{
											EntityLocatorParticipationDT locator = (EntityLocatorParticipationDT) locators.get(k);
				                          			]]></xsp:logic>
						<nedss:PersonPostalLocators>
							<address>
								<use-code>
									<xsp:expr>locator.getUseCd()</xsp:expr>
								</use-code>
								<type-code>
									<xsp:expr>locator.getCdDescTxt()</xsp:expr>
								</type-code>
								<street-address1>
									<xsp:expr>postal.getStreetAddr1()</xsp:expr>
								</street-address1>
								<city>
									<xsp:expr>postal.getCityCd()</xsp:expr>
								</city>
								<state>
									<xsp:expr>getStateDescTxt(postal.getStateCd())</xsp:expr>
								</state>
								<zip>
									<xsp:expr>postal.getZipCd()</xsp:expr>
								</zip>
							</address>
						</nedss:PersonPostalLocators>
						<xsp:logic>}}</xsp:logic>
					</column>
					<column>
						<nedss:PersonEntityLocators>
							<nedss:PersonTeleLocators>
								<telephone>
									<use-code>
										<xsp:expr>locator.getUseCd()</xsp:expr>
									</use-code>
									<type-code>
										<xsp:expr>locator.getCdDescTxt()</xsp:expr>
									</type-code>
									<telephone-number>
										<xsp:expr>tele.getPhoneNbrTxt()</xsp:expr>
									</telephone-number>
									<email-address>
										<xsp:expr>tele.getEmailAddress()</xsp:expr>
									</email-address>
								</telephone>
							</nedss:PersonTeleLocators>
						</nedss:PersonEntityLocators>
						<nedss:PersonIds>
							<id>
								<use-code>
									<xsp:expr>ids.getTypeCd() </xsp:expr>
								</use-code>
								<xsp:logic>//System.out.println("\n\n\n\nids.getTypecd() ------- :"+ (ids.getTypeCd()));</xsp:logic>
								<xsp:logic>//System.out.println("\n\n\n\nids.getRootExtensionTxt() :"+ ids.getRootExtensionTxt());</xsp:logic>
								<!--nedss:IfTypeCdSSN-->
								<nedss:RootExtensionTxtIndexOf>
									<local-id>
										<xsp:expr>ids.getRootExtensionTxt()</xsp:expr>
									</local-id>
								</nedss:RootExtensionTxtIndexOf>
								<local-id>
									<xsp:expr>ids.getRootExtensionTxt()</xsp:expr>
								</local-id>
							</id>
						</nedss:PersonIds>
					</column>
					<column>
						<option1 name="merge" default="no" value="T">
							<value>
								<xsp:expr>pvo.getPersonUID()</xsp:expr>
							</value>
						</option1>
					</column>
					<column>
						<option2 name="survivor" default="no" value="T">
							<value>
								<xsp:expr>PersonUtil.getDisplayLocalID(pvo.getPersonLocalID())</xsp:expr>
							</value>
						</option2>
					</column>					
					<nested-records>
						<xsp:logic><![CDATA[

						ArrayList revisions = (ArrayList) pvo.getRevisionColl();
						//System.out.println("** revisions  size = " +  revisions.size());

						if((revisions != null) && (revisions.size() > 0)) {
							for (int r =0; r < revisions.size(); r++)	{
								PatientRevisionSrchResultVO revisionPatient = (PatientRevisionSrchResultVO) revisions.get(r);		  	
							//System.out.println("** revisionPatient.getPersonName() = " +  revisionPatient.getPersonName());
							//System.out.println("** revisionPatient.getPersonUID() = " +  revisionPatient.getPersonUID());
  	
				  	]]></xsp:logic>
						<record>
							<uid>
								<xsp:attribute name="type">
									<xsp:expr>sOperationType</xsp:expr>
								</xsp:attribute>
								<xsp:expr>revisionPatient.getPersonUID()</xsp:expr>
							</uid>
							<column>
								<xsp:logic><![CDATA[
								ArrayList revisionNameList = (ArrayList) revisionPatient.getPersonNameColl();
						      if((revisionNameList != null) && (revisionNameList.size() > 0)) {
								  for (int j =0; j < revisionNameList.size(); j++)	{
									PersonNameDT name = (PersonNameDT) revisionNameList.get(j);
									//System.out.println("** name.getFirstNm()= " +  name.getFirstNm());

									]]></xsp:logic>
								<name>
									<use-code>
										<xsp:expr>name.getNmUseCd()</xsp:expr>
									</use-code>
									<first-name>
										<xsp:expr>name.getFirstNm()</xsp:expr>
									</first-name>
									<last-name>
										<xsp:expr>name.getLastNm()</xsp:expr>
									</last-name>
								</name>
								<xsp:logic>
						}
					}
					</xsp:logic>
							</column>
							<column>
								<xsp:logic><![CDATA[
										if(revisionPatient.getPersonDOB() != null) {
		                      		]]></xsp:logic>
								<xsp:expr>PersonUtil.displayAgeForPatientResults(revisionPatient.getPersonDOB())</xsp:expr>
								<xsp:logic><![CDATA[
										}
		                      		]]></xsp:logic>
		                      			<br></br>
								<xsp:expr>revisionPatient.getPersonDOB()</xsp:expr>
								<br></br>
								<xsp:expr>revisionPatient.getCurrentSex()</xsp:expr>
							</column>
							<!--column>
								<xsp:expr>revisionPatient.getCurrentSex()</xsp:expr>
							</column-->
							<column>
								<xsp:logic><![CDATA[
								ArrayList revisionLocators = (ArrayList) revisionPatient.getPersonLocatorsColl();
									if((revisionLocators != null) && (revisionLocators.size() > 0)) {
										for (int k =0; k < revisionLocators.size(); k++)	{
											EntityLocatorParticipationDT locator = (EntityLocatorParticipationDT) revisionLocators.get(k);

											   if(locator.getClassCd().equals("PST")) {
												   if (locator.getThePostalLocatorDT() != null)	{
													  PostalLocatorDT postal = locator.getThePostalLocatorDT();
													  if (postal != null) { 
														   if (postal.getStreetAddr1() != null || postal.getCityCd() != null || postal.getStateCd() != null || postal.getZipCd() != null)
														   { 
														    
															   entityAddress1 = postal.getStreetAddr1();
															   entityCity = postal.getCityCd();
															   entityState = getStateDescTxt(postal.getStateCd());
															   //System.out.println("\n\nlab report  this is from xsl " + entityState);
															   entityCounty =  postal.getCntyCd();
															  // System.out.println("\n\nlab report entityCounty Tthis is from xsl " + entityCounty );
															   entitystateValue = postal.getStateCd();
															   entityZip = postal.getZipCd();
															
															   if (postal.getStreetAddr2() != null)
																   entityAddress2 = postal.getStreetAddr2();
											
				                          			]]></xsp:logic>
								<address>
									<use-code>
										<xsp:expr>locator.getUseCd()</xsp:expr>
									</use-code>
									<type-code>
										<xsp:expr>locator.getCdDescTxt()</xsp:expr>
									</type-code>
									<street-address1>
										<xsp:expr>postal.getStreetAddr1()</xsp:expr>
									</street-address1>
									<city>
										<xsp:expr>postal.getCityCd()</xsp:expr>
									</city>
									<state>
										<xsp:expr>getStateDescTxt(postal.getStateCd())</xsp:expr>
									</state>
									<zip>
										<xsp:expr>postal.getZipCd()</xsp:expr>
									</zip>
								</address>
								<xsp:logic>
								  } }}}
								  </xsp:logic>
								<xsp:logic>}}</xsp:logic>
							</column>
							<column>
								<xsp:logic><![CDATA[
						    ArrayList revisionPersonList = (ArrayList) revisionPatient.getPersonLocatorsColl();
							if((revisionPersonList != null) && (revisionPersonList.size() > 0)) {
								for (int k =0; k < revisionPersonList.size(); k++)	{
									EntityLocatorParticipationDT locator = (EntityLocatorParticipationDT) revisionPersonList.get(k);
						]]></xsp:logic>
								<nedss:PersonTeleLocators>
									<telephone>
										<use-code>
											<xsp:expr>locator.getUseCd()</xsp:expr>
										</use-code>
										<type-code>
											<xsp:expr>locator.getCdDescTxt()</xsp:expr>
										</type-code>
										<telephone-number>
											<xsp:expr>tele.getPhoneNbrTxt()</xsp:expr>
										</telephone-number>
										<email-address>
											<xsp:expr>tele.getEmailAddress()</xsp:expr>
										</email-address>
									</telephone>
								</nedss:PersonTeleLocators>
								<xsp:logic><![CDATA[
							}}
					     ]]></xsp:logic>
								<xsp:logic><![CDATA[
	
							ArrayList personIdList =  (ArrayList)revisionPatient.getPersonIdColl();
														
							if((personIdList != null) && (personIdList.size() > 0))  {
					
								for( Iterator anIterator = personIdList.iterator(); anIterator.hasNext(); )
								{
									EntityIdDT ids  = (EntityIdDT) anIterator.next();
									if(ids != null)
									{
	
						]]></xsp:logic>
								<id>
									<use-code>
										<xsp:expr>ids.getTypeCd() </xsp:expr>
									</use-code>
									<xsp:logic>//System.out.println("\n\n\n\nids.getTypecd() ------- :"+ (ids.getTypeCd()));</xsp:logic>
									<xsp:logic>//System.out.println("\n\n\n\nids.getRootExtensionTxt() :"+ ids.getRootExtensionTxt());</xsp:logic>
									<!--nedss:IfTypeCdSSN-->
									<nedss:RootExtensionTxtIndexOf>
										<local-id>
											<xsp:expr>ids.getRootExtensionTxt()</xsp:expr>
										</local-id>
									</nedss:RootExtensionTxtIndexOf>
									<local-id>
										<xsp:expr>ids.getRootExtensionTxt()</xsp:expr>
									</local-id>
									<!--/nedss:ElseClause-->
								</id>
								<xsp:logic><![CDATA[
					}}}
					]]></xsp:logic>
							</column>
							<column/>
						</record>
						<xsp:logic>
  							}
  						}
			
			</xsp:logic>
					</nested-records>
					<entity-search>
						<!--	using legal name and home tele		-->
						<entity-element name="entity.lastNm">
							<xsp:expr>entityLastNm</xsp:expr>
						</entity-element>
						<entity-element name="entity.firstNm">
							<xsp:expr>entityFirstNm</xsp:expr>
						</entity-element>
						<entity-element name="entity.emailAddress">
							<xsp:expr>entityEmail</xsp:expr>
						</entity-element>
						<entity-element name="entity.phoneNbrTxt">
							<xsp:expr>entityPhoneNbr</xsp:expr>
						</entity-element>
						<entity-element name="entity.extensionTxt">
							<xsp:expr>entityPhoneExt</xsp:expr>
						</entity-element>
						<entity-element name="entity.personUID">
							<xsp:expr>entityPersonUID</xsp:expr>
						</entity-element>
						<entity-element name="entity.localID">
							<xsp:expr>entityLocalID</xsp:expr>
						</entity-element>
					</entity-search>
					<xsp:logic>
								entityLastNm=null;
								entityFirstNm=null;
								entityEmail=null;
								entityPhoneNbr=null;
								entityPhoneExt=null;
								entityPersonUID=null;
								entityLocalID=null;
							</xsp:logic>
				</record>
			</nedss:MergeList>
			<!--xsp:logic><![CDATA[
				}
			]]></xsp:logic-->
		</records>
	</content>
</xsp:page>
