<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  This is the web-app configurations that allow Cocoon to work under
  Apache Tomcat. Please, follow the installation section of the
  documentation for more information about installing Cocoon on Tomcat
-->
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<display-name>Cocoon2.1 Demo</display-name>
	<description>Demo application for Cocoon2</description>
	<filter>   
		<filter-name>XSSFilter</filter-name>   
		<filter-class>gov.cdc.nedss.webapp.nbs.servlet.XSSFilter</filter-class> 
	</filter>
	<filter>
	    <filter-name>ResponseOverrideFilter</filter-name> 
	    <filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class> 
	</filter>
	<filter>
        <filter-name>UTF8Filter</filter-name>
        <filter-class>gov.cdc.nedss.webapp.nbs.servlet.UTF8Filter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>UTF8Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<filter-mapping>
	    <filter-name>ResponseOverrideFilter</filter-name> 
	    <url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping> 
	    <filter-name>ResponseOverrideFilter</filter-name> 
	    <url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
	    <filter-name>XSSFilter</filter-name> 
	    <url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping> 
	    <filter-name>XSSFilter</filter-name> 
	    <url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>Cocoon2.1</servlet-name>
		<display-name>Cocoon2.1</display-name>
		<description>The main Cocoon2.1 servlet</description>
		<!--
      In cases you're facing class loader problems you can alternatively
      use the following servlet-class instead of the normal one

      <servlet-class>org.apache.cocoon.servlet.ParanoidCocoonServlet</servlet-class>
    -->
		<servlet-class>org.apache.cocoon.servlet.CocoonServlet</servlet-class>
		<!--
      This parameter points to the main configuration file for Cocoon.
      Note that the path is specified in absolute notation but it will be
      resolved relative to the servlets webapp context path
    -->
		<init-param>
			<param-name>configurations</param-name>
			<param-value>/WEB-INF/cocoon.xconf</param-value>
		</init-param>
		<!--
      This parameter tells cocoon to set the thread's context classloader to
      its own classloader. If you experience strange classloader issues,
      try setting this parameter to "true" or using ParanoidCocoonServlet.
    -->
		<init-param>
			<param-name>init-classloader</param-name>
			<param-value>false</param-value>
		</init-param>
		<!--
      This parameter indicates the configuration file of the LogKit management
    -->
		<init-param>
			<param-name>logkit-config</param-name>
			<param-value>/WEB-INF/logkit.xconf</param-value>
		</init-param>
		<!--
      This parameter indicates the category id of the logger from the LogKit
      configuration used by the CocoonServlet.
    -->
		<init-param>
			<param-name>servlet-logger</param-name>
			<param-value>access</param-value>
		</init-param>
		<!--
      This parameter indicates the category id of the logger from the LogKit
      management configuration for the Cocoon engine.
      This logger is used for all components described in the cocoon.xconf
      and sitemap.xmap file not having specified a logger with the
      logger="..." attribute in the component configuration file.
    -->
		<init-param>
			<param-name>cocoon-logger</param-name>
			<param-value>core</param-value>
		</init-param>
		<!--
      This parameter indicates the log level to use throughout startup of the system.
      As soon as the logkit.xconf the setting of the logkit.xconf configuration is
      used instead! Only for startup and if the logkit.xconf is not readable/available
      this log level is of importance.

      Available levels are:
        DEBUG:        prints all level of log messages.
        INFO:         prints all level of log messages except DEBUG ones.
        WARN:         prints all level of log messages except DEBUG and INFO ones.
        ERROR:        prints all level of log messages except DEBUG, INFO and WARN ones.
        FATAL_ERROR:  prints only log messages of this level
    -->
		<init-param>
			<param-name>log-level</param-name>
			<param-value>DEBUG</param-value>
		</init-param>
		<!--
      Allow reinstantiating (reloading) of the cocoon instance. If this is
      set to "yes" or "true", a new cocoon instance can be created using
      the request parameter "cocoon-reload".
    -->
		<init-param>
			<param-name>allow-reload</param-name>
			<param-value>yes</param-value>
		</init-param>
		<!--
      This parameter is used to list classes that should be loaded
      at initialization time of the servlet.
      Usually this classes are JDBC Drivers used
    -->
		<!--
      This parameter allows to specify where Cocoon should put uploaded files.
      The path specified can be either absolute or relative to the context
      path of the servlet. On windows platform, absolute directory must start
      with volume: C:\Path\To\Upload\Directory

      The default directory is "upload-dir" in the work-directory

    <init-param>
      <param-name>upload-directory</param-name>
      <param-value>WEB-INF/work/upload-dir</param-value>
    </init-param>
    -->
		<!--
      Causes all files in multipart requests to be saved to upload-dir.
      Default is true.  Unsupported values will be interpreted as false.
    -->
		<init-param>
			<param-name>autosave-uploads</param-name>
			<param-value>false</param-value>
		</init-param>
		<!--
      Specify handling of name conflicts when saving uploaded files
      to disk.  Acceptable values are deny, allow, rename (default).
      Files are renamed x_filename where x is an integer value incremented
      to make the new filename unique.
    -->
		<init-param>
			<param-name>overwrite-uploads</param-name>
			<param-value>rename</param-value>
		</init-param>
		<!--
      Specify maximum allowed size of the upload. Defaults to 10 Mb.

    <init-param>
      <param-name>upload-max-size</param-name>
      <param-value>10000000</param-value>
    </init-param>
    -->
		<!--
      This parameter allows to specify where Cocoon should create its page
      and other objects cache. The path specified can be either absolute or
      relative to the context path of the servlet. On windows platform,
      absolute directory must start with volume: C:\Path\To\Cache\Directory

      The default directory is "cache-dir" in the work-directory

    <init-param>
      <param-name>cache-directory</param-name>
      <param-value>WEB-INF/work/cache-dir</param-value>
    </init-param>
    -->
		<!--
      This parameter allows to specify where Cocoon should put it's
      working files. The path specified is either absolute or relative
      to the context path of the Cocoon servlet.  On windows platform,
      absolute directory must start with volume: C:\Path\To\Work\Directory

      The default directory is "cocoon-files" directory in the servlet
      context's temp directory (context property javax.servlet.context.tempdir). -->
		<init-param>
			<param-name>work-directory</param-name>
			<param-value>nedsstemp\cocoon-files</param-value>
		</init-param>
		<!--
      This parameter allows to specify additional directories or jars
      which Cocoon should put into it's own classpath.
      Note that you must separate them using the platforms path.separator
      (":" for *nix and ";" for Windows systems). Also note that absolute
      pathes are take as such but relative pathes are rooted at the context
      root of the Cocoon servlet.

    <init-param>
      <param-name>extra-classpath</param-name>
      <param-value>WEB-INF/extra-classes1:/[YOU-ABSOLUTE-PATH-TO]/own.jar</param-value>
    </init-param>
    -->
		<!--
      This parameter allows you to select the parent component manager.
      The class will be instantiated via the constructor that takes a single
      String as a parameter. That String will be equal to the text after the
      '/'.

      Cocoon honors the Loggable and Initializable interfaces for this class,
      if it implements them.

      If you uncomment the following lines the parent CM is set to the Parent CM sample, which will look up
      a configuration via JNDI at org/apache/cocoon/samples/parentcm/ParentCMConfiguration
      and use it.
    <init-param>
      <param-name>parent-component-manager</param-name>
      <param-value>org.apache.cocoon.samples.parentcm.ParentComponentManager/org/apache/cocoon/samples/parentcm/ParentCMConfiguration</param-value>
    </init-param>
    -->
		<!--
      This parameter allows you to select the request factory. Possible
      choices are as follows:
        - org.apache.cocoon.components.request.MultipartRequestFactoryImpl
          This is the default factory.
        - org.apache.cocoon.components.request.MaybeUploadRequestFactoryImpl
          You can opt in for this factory if maybeupload.jar is
          present.
        - org.apache.cocoon.components.request.SimpleRequestFactoryImpl
          This factory does not allow uploads.
    -->
		<init-param>
			<param-name>request-factory</param-name>
			<param-value>org.apache.cocoon.components.request.MultipartRequestFactoryImpl</param-value>
		</init-param>
		<!--
      If you set this parameter to 'true' or 'yes', Cocoon will add processing
      time to the end of each response. Value 'hide' adds processing time as an HTML
      comment. By default, processing time is not added (corresponds to value 'no').

    <init-param>
      <param-name>show-time</param-name>
      <param-value>hide</param-value>
    </init-param>
    -->
		<!--
       If true or not set, this class will try to catch and handle all Cocoon exceptions.
       If false, it will rethrow them to the servlet container.
    -->
		<init-param>
			<param-name>manage-exceptions</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
      This parameter allows you to startup Cocoon2 immediately after startup
      of your servlet engine.
    -->
		<load-on-startup>1</load-on-startup>
		
	</servlet>
	<!--			NEDSS SERVLETS		-->
	<!--			NEDSS SERVLETS		-->
	<!--			NEDSS SERVLETS		-->
	<servlet>
		<servlet-name>nfc</servlet-name>
		<display-name>NEDSS Front Controller</display-name>
		<description>The main NEDSS servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssFrontController</servlet-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>/WEB-INF/struts-config.xml</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>4</param-value>
		</init-param>
		<init-param>
			<param-name>detail</param-name>
			<param-value>9</param-value>
		</init-param>
		<init-param>
			<param-name>validate</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<display-name>DWR Servlet</display-name>
		<servlet-class>uk.ltd.getahead.dwr.DWRServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>3</load-on-startup>
	</servlet>
  <servlet>
    <servlet-name>DisplayChart</servlet-name>
    <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
  </servlet>	
	<servlet>
		<servlet-name>nflc</servlet-name>
		<display-name>NEDSS Front Log Controller</display-name>
		<description>The NEDSS log controller servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssFrontLogController</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>rlp</servlet-name>
		<display-name>Reset properties and read new properties</display-name>
		<description>Property reread servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.ResetProperties</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>debug</servlet-name>
		<display-name>debug</display-name>
		<description>The servlet debugger</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.DebugServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>post</servlet-name>
		<display-name>post viewer</display-name>
		<description>The servlet for viewing post</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.Posted</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>dynamicSelect</servlet-name>
		<display-name>get data for dynamic select</display-name>
		<description>servlet retrieves dynamically generated select boxes</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssGetSelectData</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>nbslogin</servlet-name>
		<display-name>NBS login</display-name>
		<description>The login servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.LoginServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>logout</servlet-name>
		<display-name>logout</display-name>
		<description>The logout servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.LogoutServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>clearSRTCache</servlet-name>
		<display-name>clearSRTCache</display-name>
		<description>clear the SRT Cache</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.ResetSRTCacheServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>NBSLoadOnStartServlet</servlet-name>
		<display-name>Lab TestName and TestResult Filter</display-name>
		<description>The NEDSS lab test name and result servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NBSLoadOnStartServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>nedssCodeLookup</servlet-name>
		<display-name>lab code Lookup</display-name>
		<description>The NEDSS labReport Code Lookup Servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssCodeLookupServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>nedssErrorPrint</servlet-name>
		<display-name>error print servlet</display-name>
		<description>The NEDSS Error Page Print Servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssErrorPagePrintServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>AjaxAutocompleterChoicesServlet</servlet-name>
		<display-name>AjaxAutocompleterChoicesServlet</display-name>
		<description>The NEDSS ajax Servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.AjaxAutocompleterChoicesServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>nedssOrganismIndicatorLookup</servlet-name>
		<display-name>lab code Lookup</display-name>
		<description>The NEDSS NedssOrganismLookupServlet Lookup Servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssOrganismLookupServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>codeLookup</servlet-name>
		<display-name>Simple Code Lookup</display-name>
		<description>NBS Simple Code Lookup Servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.CodeLookupServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>chartServlet</servlet-name>
		<display-name>NBS Chart Renderer Servlet</display-name>
		<description>NBS Chart Renderer Servlet</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NedssChartServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ViewContactTracing</servlet-name>
		<display-name>NBS Contact Tracing Attachment Servlet</display-name>
		<description>NBS Contact Tracing View Attachment</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.CTAttachmentViewServlet</servlet-class>
	</servlet>	
	<servlet>
		<servlet-name>nbsPublisher</servlet-name>
		<display-name>NBS Java Server Page Publisher</display-name>
		<description>NBS Java Server Page Publisher</description>
		<servlet-class>gov.cdc.nedss.webapp.nbs.servlet.NBSJavaServerPagePublisher</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>	
	<servlet-mapping>
		<servlet-name>nfc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
   <servlet-mapping>
        <servlet-name>DisplayChart</servlet-name>
        <url-pattern>/DisplayChart</url-pattern>
    </servlet-mapping>	
	<servlet-mapping>
		<servlet-name>nfc</servlet-name>
		<url-pattern>/nfc</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>nflc</servlet-name>
		<url-pattern>/nflc</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>rlp</servlet-name>
		<url-pattern>/rlp</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>debug</servlet-name>
		<url-pattern>/debug/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>post</servlet-name>
		<url-pattern>/posted</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>dynamicSelect</servlet-name>
		<url-pattern>/dynamicSelect</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>nbslogin</servlet-name>
		<url-pattern>/nbslogin</url-pattern>
	</servlet-mapping>
	<servlet-mapping>

		<servlet-name>logout</servlet-name>
		<url-pattern>/logout</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>clearSRTCache</servlet-name>
		<url-pattern>/purge</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AjaxAutocompleterChoicesServlet</servlet-name>
		<url-pattern>/getAutocompleterChoices</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>NBSLoadOnStartServlet</servlet-name>
		<url-pattern>/NBSLoadOnStartServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>nedssCodeLookup</servlet-name>
		<url-pattern>/nedssCodeLookup</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>nedssErrorPrint</servlet-name>
		<url-pattern>/nedssErrorPrint</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>nedssOrganismIndicatorLookup</servlet-name>
		<url-pattern>/nedssOrganismIndicatorLookup</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>codeLookup</servlet-name>
		<url-pattern>/codeLookup</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>chartServlet</servlet-name>
		<url-pattern>/chartServlet</url-pattern>
	</servlet-mapping>	
	<servlet-mapping>
		<servlet-name>ViewContactTracing</servlet-name>
		<url-pattern>/ViewContactTracing</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>nbsPublisher</servlet-name>
		<url-pattern>/nbsPublisher</url-pattern>
	</servlet-mapping>

	<!--
    Cocoon handles all the URL space assigned to the webapp using its sitemap.
    It is recommended to leave it unchanged. Under some circumstances though
    (like integration with proprietary webapps or servlets) you might have
    to change this parameter.
  -->
	<servlet-mapping>
		<servlet-name>Cocoon2.1</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!--
    Some servlet engines (Tomcat) have defaults which are not overriden
    by '/' mapping, but must be overriden explicitly.
  -->
	<!--servlet-mapping>
    <servlet-name>Cocoon2.1</servlet-name>
    <url-pattern>*.jsp</url-pattern>
  </servlet-mapping-->
	<!--
    Some servlet engines (WebLogic) have defaults which are not overriden
    by '/' mapping, but must be overriden explicitly.
  -->
	<servlet-mapping>
		<servlet-name>Cocoon2.1</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<!--
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>
	-->
	<mime-mapping>
		<extension>css</extension>
		<mime-type>text/css</mime-type>
	</mime-mapping>
	<error-page>
		<error-code>500</error-code>
		<location>/404.html</location>
	</error-page>
	<!-- Struts Tag Library Descriptors -->
	<taglib>
		<taglib-uri>/WEB-INF/struts-bean.tld</taglib-uri>
		<taglib-location>/WEB-INF/struts-bean.tld</taglib-location>
	</taglib>
	<taglib>
		<taglib-uri>/WEB-INF/struts-html.tld</taglib-uri>
		<taglib-location>/WEB-INF/struts-html.tld</taglib-location>
	</taglib>
	<taglib>
		<taglib-uri>/WEB-INF/struts-logic.tld</taglib-uri>
		<taglib-location>/WEB-INF/struts-logic.tld</taglib-location>
	</taglib>
	<taglib>
		<taglib-uri>/WEB-INF/c.tld</taglib-uri>
		<taglib-location>/WEB-INF/c.tld</taglib-location>
	</taglib>
	<taglib>
		<taglib-uri>/WEB-INF/displaytag.tld</taglib-uri>
		<taglib-location>/WEB-INF/displaytag.tld</taglib-location>
	</taglib>
	<taglib>
		<taglib-uri>/WEB-INF/displaytag-el.tld</taglib-uri>
		<taglib-location>/WEB-INF/displaytag-el.tld</taglib-location>
	</taglib>
	<resource-ref>
		<res-ref-name>datasources/RdbDataSource</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>
	</resource-ref>	
</web-app>
